// source: FirstAidCmd.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.FirstAidCmd', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.FirstAidCmd = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.FirstAidCmd, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.FirstAidCmd.displayName = 'proto.FirstAidCmd';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.FirstAidCmd.prototype.toObject = function(opt_includeInstance) {
  return proto.FirstAidCmd.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.FirstAidCmd} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.FirstAidCmd.toObject = function(includeInstance, msg) {
  var f, obj = {
    msgtype: jspb.Message.getFieldWithDefault(msg, 1, 0),
    msgcode: jspb.Message.getFieldWithDefault(msg, 2, 0),
    timestamp: jspb.Message.getFieldWithDefault(msg, 3, 0),
    devcode: jspb.Message.getFieldWithDefault(msg, 5, ""),
    secretkey: jspb.Message.getFieldWithDefault(msg, 6, ""),
    imeiversion: jspb.Message.getFieldWithDefault(msg, 8, ""),
    framenumber: jspb.Message.getFieldWithDefault(msg, 9, 0),
    totalframe: jspb.Message.getFieldWithDefault(msg, 10, 0),
    firmsize: jspb.Message.getFieldWithDefault(msg, 11, 0),
    firmdatabytes: msg.getFirmdatabytes_asB64(),
    errormsg: jspb.Message.getFieldWithDefault(msg, 13, ""),
    customizetype: jspb.Message.getFieldWithDefault(msg, 14, 0),
    spare: jspb.Message.getFloatingPointFieldWithDefault(msg, 15, 0.0),
    lockport: jspb.Message.getFieldWithDefault(msg, 16, 0),
    lockstatus: jspb.Message.getFieldWithDefault(msg, 17, ""),
    idcard: jspb.Message.getFieldWithDefault(msg, 18, ""),
    startimes: jspb.Message.getFieldWithDefault(msg, 19, 0),
    endtimes: jspb.Message.getFieldWithDefault(msg, 20, 0),
    lockid1: jspb.Message.getFieldWithDefault(msg, 21, ""),
    lockid2: jspb.Message.getFieldWithDefault(msg, 22, ""),
    lockid3: jspb.Message.getFieldWithDefault(msg, 23, ""),
    lockid4: jspb.Message.getFieldWithDefault(msg, 24, ""),
    lockid5: jspb.Message.getFieldWithDefault(msg, 25, ""),
    lockid6: jspb.Message.getFieldWithDefault(msg, 26, ""),
    lockerrocode: jspb.Message.getFieldWithDefault(msg, 27, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.FirstAidCmd}
 */
proto.FirstAidCmd.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.FirstAidCmd;
  return proto.FirstAidCmd.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.FirstAidCmd} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.FirstAidCmd}
 */
proto.FirstAidCmd.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMsgtype(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMsgcode(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTimestamp(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setDevcode(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setSecretkey(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setImeiversion(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setFramenumber(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setTotalframe(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setFirmsize(value);
      break;
    case 12:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setFirmdatabytes(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setErrormsg(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCustomizetype(value);
      break;
    case 15:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setSpare(value);
      break;
    case 16:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLockport(value);
      break;
    case 17:
      var value = /** @type {string} */ (reader.readString());
      msg.setLockstatus(value);
      break;
    case 18:
      var value = /** @type {string} */ (reader.readString());
      msg.setIdcard(value);
      break;
    case 19:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setStartimes(value);
      break;
    case 20:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setEndtimes(value);
      break;
    case 21:
      var value = /** @type {string} */ (reader.readString());
      msg.setLockid1(value);
      break;
    case 22:
      var value = /** @type {string} */ (reader.readString());
      msg.setLockid2(value);
      break;
    case 23:
      var value = /** @type {string} */ (reader.readString());
      msg.setLockid3(value);
      break;
    case 24:
      var value = /** @type {string} */ (reader.readString());
      msg.setLockid4(value);
      break;
    case 25:
      var value = /** @type {string} */ (reader.readString());
      msg.setLockid5(value);
      break;
    case 26:
      var value = /** @type {string} */ (reader.readString());
      msg.setLockid6(value);
      break;
    case 27:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLockerrocode(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.FirstAidCmd.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.FirstAidCmd.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.FirstAidCmd} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.FirstAidCmd.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMsgtype();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getMsgcode();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getTimestamp();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getDevcode();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getSecretkey();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getImeiversion();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getFramenumber();
  if (f !== 0) {
    writer.writeUint32(
      9,
      f
    );
  }
  f = message.getTotalframe();
  if (f !== 0) {
    writer.writeUint32(
      10,
      f
    );
  }
  f = message.getFirmsize();
  if (f !== 0) {
    writer.writeInt64(
      11,
      f
    );
  }
  f = message.getFirmdatabytes_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      12,
      f
    );
  }
  f = message.getErrormsg();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
  f = message.getCustomizetype();
  if (f !== 0) {
    writer.writeInt32(
      14,
      f
    );
  }
  f = message.getSpare();
  if (f !== 0.0) {
    writer.writeFloat(
      15,
      f
    );
  }
  f = message.getLockport();
  if (f !== 0) {
    writer.writeInt32(
      16,
      f
    );
  }
  f = message.getLockstatus();
  if (f.length > 0) {
    writer.writeString(
      17,
      f
    );
  }
  f = message.getIdcard();
  if (f.length > 0) {
    writer.writeString(
      18,
      f
    );
  }
  f = message.getStartimes();
  if (f !== 0) {
    writer.writeInt32(
      19,
      f
    );
  }
  f = message.getEndtimes();
  if (f !== 0) {
    writer.writeInt32(
      20,
      f
    );
  }
  f = message.getLockid1();
  if (f.length > 0) {
    writer.writeString(
      21,
      f
    );
  }
  f = message.getLockid2();
  if (f.length > 0) {
    writer.writeString(
      22,
      f
    );
  }
  f = message.getLockid3();
  if (f.length > 0) {
    writer.writeString(
      23,
      f
    );
  }
  f = message.getLockid4();
  if (f.length > 0) {
    writer.writeString(
      24,
      f
    );
  }
  f = message.getLockid5();
  if (f.length > 0) {
    writer.writeString(
      25,
      f
    );
  }
  f = message.getLockid6();
  if (f.length > 0) {
    writer.writeString(
      26,
      f
    );
  }
  f = message.getLockerrocode();
  if (f !== 0) {
    writer.writeInt32(
      27,
      f
    );
  }
};


/**
 * optional int32 msgType = 1;
 * @return {number}
 */
proto.FirstAidCmd.prototype.getMsgtype = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.FirstAidCmd} returns this
 */
proto.FirstAidCmd.prototype.setMsgtype = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 msgCode = 2;
 * @return {number}
 */
proto.FirstAidCmd.prototype.getMsgcode = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.FirstAidCmd} returns this
 */
proto.FirstAidCmd.prototype.setMsgcode = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 timeStamp = 3;
 * @return {number}
 */
proto.FirstAidCmd.prototype.getTimestamp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.FirstAidCmd} returns this
 */
proto.FirstAidCmd.prototype.setTimestamp = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string devCode = 5;
 * @return {string}
 */
proto.FirstAidCmd.prototype.getDevcode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.FirstAidCmd} returns this
 */
proto.FirstAidCmd.prototype.setDevcode = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string secretKey = 6;
 * @return {string}
 */
proto.FirstAidCmd.prototype.getSecretkey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.FirstAidCmd} returns this
 */
proto.FirstAidCmd.prototype.setSecretkey = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string imeiVersion = 8;
 * @return {string}
 */
proto.FirstAidCmd.prototype.getImeiversion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.FirstAidCmd} returns this
 */
proto.FirstAidCmd.prototype.setImeiversion = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional uint32 frameNumber = 9;
 * @return {number}
 */
proto.FirstAidCmd.prototype.getFramenumber = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.FirstAidCmd} returns this
 */
proto.FirstAidCmd.prototype.setFramenumber = function(value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional uint32 totalFrame = 10;
 * @return {number}
 */
proto.FirstAidCmd.prototype.getTotalframe = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.FirstAidCmd} returns this
 */
proto.FirstAidCmd.prototype.setTotalframe = function(value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional int64 firmSize = 11;
 * @return {number}
 */
proto.FirstAidCmd.prototype.getFirmsize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {number} value
 * @return {!proto.FirstAidCmd} returns this
 */
proto.FirstAidCmd.prototype.setFirmsize = function(value) {
  return jspb.Message.setProto3IntField(this, 11, value);
};


/**
 * optional bytes firmDataBytes = 12;
 * @return {!(string|Uint8Array)}
 */
proto.FirstAidCmd.prototype.getFirmdatabytes = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * optional bytes firmDataBytes = 12;
 * This is a type-conversion wrapper around `getFirmdatabytes()`
 * @return {string}
 */
proto.FirstAidCmd.prototype.getFirmdatabytes_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getFirmdatabytes()));
};


/**
 * optional bytes firmDataBytes = 12;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getFirmdatabytes()`
 * @return {!Uint8Array}
 */
proto.FirstAidCmd.prototype.getFirmdatabytes_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getFirmdatabytes()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.FirstAidCmd} returns this
 */
proto.FirstAidCmd.prototype.setFirmdatabytes = function(value) {
  return jspb.Message.setProto3BytesField(this, 12, value);
};


/**
 * optional string errorMsg = 13;
 * @return {string}
 */
proto.FirstAidCmd.prototype.getErrormsg = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.FirstAidCmd} returns this
 */
proto.FirstAidCmd.prototype.setErrormsg = function(value) {
  return jspb.Message.setProto3StringField(this, 13, value);
};


/**
 * optional int32 customizeType = 14;
 * @return {number}
 */
proto.FirstAidCmd.prototype.getCustomizetype = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};


/**
 * @param {number} value
 * @return {!proto.FirstAidCmd} returns this
 */
proto.FirstAidCmd.prototype.setCustomizetype = function(value) {
  return jspb.Message.setProto3IntField(this, 14, value);
};


/**
 * optional float spare = 15;
 * @return {number}
 */
proto.FirstAidCmd.prototype.getSpare = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 15, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.FirstAidCmd} returns this
 */
proto.FirstAidCmd.prototype.setSpare = function(value) {
  return jspb.Message.setProto3FloatField(this, 15, value);
};


/**
 * optional int32 lockport = 16;
 * @return {number}
 */
proto.FirstAidCmd.prototype.getLockport = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 16, 0));
};


/**
 * @param {number} value
 * @return {!proto.FirstAidCmd} returns this
 */
proto.FirstAidCmd.prototype.setLockport = function(value) {
  return jspb.Message.setProto3IntField(this, 16, value);
};


/**
 * optional string lockstatus = 17;
 * @return {string}
 */
proto.FirstAidCmd.prototype.getLockstatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 17, ""));
};


/**
 * @param {string} value
 * @return {!proto.FirstAidCmd} returns this
 */
proto.FirstAidCmd.prototype.setLockstatus = function(value) {
  return jspb.Message.setProto3StringField(this, 17, value);
};


/**
 * optional string IDcard = 18;
 * @return {string}
 */
proto.FirstAidCmd.prototype.getIdcard = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 18, ""));
};


/**
 * @param {string} value
 * @return {!proto.FirstAidCmd} returns this
 */
proto.FirstAidCmd.prototype.setIdcard = function(value) {
  return jspb.Message.setProto3StringField(this, 18, value);
};


/**
 * optional int32 startimes = 19;
 * @return {number}
 */
proto.FirstAidCmd.prototype.getStartimes = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 19, 0));
};


/**
 * @param {number} value
 * @return {!proto.FirstAidCmd} returns this
 */
proto.FirstAidCmd.prototype.setStartimes = function(value) {
  return jspb.Message.setProto3IntField(this, 19, value);
};


/**
 * optional int32 endtimes = 20;
 * @return {number}
 */
proto.FirstAidCmd.prototype.getEndtimes = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 20, 0));
};


/**
 * @param {number} value
 * @return {!proto.FirstAidCmd} returns this
 */
proto.FirstAidCmd.prototype.setEndtimes = function(value) {
  return jspb.Message.setProto3IntField(this, 20, value);
};


/**
 * optional string lockID1 = 21;
 * @return {string}
 */
proto.FirstAidCmd.prototype.getLockid1 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 21, ""));
};


/**
 * @param {string} value
 * @return {!proto.FirstAidCmd} returns this
 */
proto.FirstAidCmd.prototype.setLockid1 = function(value) {
  return jspb.Message.setProto3StringField(this, 21, value);
};


/**
 * optional string lockID2 = 22;
 * @return {string}
 */
proto.FirstAidCmd.prototype.getLockid2 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 22, ""));
};


/**
 * @param {string} value
 * @return {!proto.FirstAidCmd} returns this
 */
proto.FirstAidCmd.prototype.setLockid2 = function(value) {
  return jspb.Message.setProto3StringField(this, 22, value);
};


/**
 * optional string lockID3 = 23;
 * @return {string}
 */
proto.FirstAidCmd.prototype.getLockid3 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 23, ""));
};


/**
 * @param {string} value
 * @return {!proto.FirstAidCmd} returns this
 */
proto.FirstAidCmd.prototype.setLockid3 = function(value) {
  return jspb.Message.setProto3StringField(this, 23, value);
};


/**
 * optional string lockID4 = 24;
 * @return {string}
 */
proto.FirstAidCmd.prototype.getLockid4 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 24, ""));
};


/**
 * @param {string} value
 * @return {!proto.FirstAidCmd} returns this
 */
proto.FirstAidCmd.prototype.setLockid4 = function(value) {
  return jspb.Message.setProto3StringField(this, 24, value);
};


/**
 * optional string lockID5 = 25;
 * @return {string}
 */
proto.FirstAidCmd.prototype.getLockid5 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 25, ""));
};


/**
 * @param {string} value
 * @return {!proto.FirstAidCmd} returns this
 */
proto.FirstAidCmd.prototype.setLockid5 = function(value) {
  return jspb.Message.setProto3StringField(this, 25, value);
};


/**
 * optional string lockID6 = 26;
 * @return {string}
 */
proto.FirstAidCmd.prototype.getLockid6 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 26, ""));
};


/**
 * @param {string} value
 * @return {!proto.FirstAidCmd} returns this
 */
proto.FirstAidCmd.prototype.setLockid6 = function(value) {
  return jspb.Message.setProto3StringField(this, 26, value);
};


/**
 * optional int32 lockErroCode = 27;
 * @return {number}
 */
proto.FirstAidCmd.prototype.getLockerrocode = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 27, 0));
};


/**
 * @param {number} value
 * @return {!proto.FirstAidCmd} returns this
 */
proto.FirstAidCmd.prototype.setLockerrocode = function(value) {
  return jspb.Message.setProto3IntField(this, 27, value);
};


goog.object.extend(exports, proto);
